<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springframework.org/schema/integration/aws"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			xmlns:tool="http://www.springframework.org/schema/tool"
			xmlns:integration="http://www.springframework.org/schema/integration"
			targetNamespace="http://www.springframework.org/schema/integration/aws"
			elementFormDefault="qualified"
			attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"/>
	<xsd:import namespace="http://www.springframework.org/schema/tool"/>
	<xsd:import namespace="http://www.springframework.org/schema/integration"
				schemaLocation="http://www.springframework.org/schema/integration/spring-integration.xsd"/>


	<xsd:annotation>
		<xsd:documentation><![CDATA[
	Defines the configuration elements for Spring Integration's AWS Adapters.
		]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="s3-outbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
				with one-way behaviour to perform Amazon S3 operations .
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="s3OutboundAttributes">
					<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="s3-outbound-gateway">
		<xsd:annotation>
			<xsd:documentation>
				Defines a Consumer Endpoint for the 'org.springframework.integration.aws.outbound.S3MessageHandler'
				with request-reply behaviour to perform Amazon S3 operations.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="s3OutboundAttributes">
					<xsd:attribute name="request-channel" use="required" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Identifies the request channel attached to this gateway.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="reply-channel" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Identifies the reply channel attached to this gateway.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="reply-timeout" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
								Allows you to specify how long this gateway will wait for
								the reply message to be sent successfully to the reply channel
								before throwing an exception. This attribute only applies when the
								channel might block, for example when using a bounded queue channel that
								is currently full.

								Also, keep in mind that when sending to a DirectChannel, the
								invocation will occur in the sender's thread. Therefore,
								the failing of the send operation may be caused by other
								components further downstream.

								The "reply-timeout" attribute maps to the "sendTimeout" property of the
								underlying 'MessagingTemplate' instance
								(org.springframework.integration.core.MessagingTemplate).

								The attribute will default, if not specified, to '-1', meaning that
								by default, the Gateway will wait indefinitely. The value is
								specified in milliseconds.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="id" type="xsd:string"/>
					<xsd:attributeGroup ref="integration:smartLifeCycleAttributeGroup"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:complexType name="s3OutboundAttributes">
		<xsd:sequence>
			<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="request-handler-advice-chain" type="integration:handlerAdviceChainType" minOccurs="0"
						 maxOccurs="1"/>
		</xsd:sequence>
		<xsd:attribute name="order">
			<xsd:annotation>
				<xsd:documentation>
					Specifies the order for invocation when this endpoint is connected as a
					subscriber to a SubscribableChannel.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="s3">
			<xsd:annotation>
				<xsd:documentation>
					Reference to an instance of 'com.amazonaws.services.s3.AmazonS3'.
					Mutually exclusive with the 'transfer-manager'.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="com.amazonaws.services.s3.AmazonS3"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="transfer-manager">
			<xsd:annotation>
				<xsd:documentation>
					Reference to an instance of 'com.amazonaws.services.s3.transfer.TransferManager'.
					Mutually exclusive with the 's3'.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="com.amazonaws.services.s3.transfer.TransferManager"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="bucket">
			<xsd:annotation>
				<xsd:documentation>
					The S3 bucket to use.
					Mutually exclusive with 'bucket-expression'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="bucket-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate S3 bucket at runtime against request message.
					Mutually exclusive with 'bucket'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="command">
			<xsd:annotation>
				<xsd:documentation>
					The S3MessageHandler operation command.
					Mutually exclusive with 'command-expression'.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:union memberTypes="s3CommandType xsd:string"/>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="command-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate S3MessageHandler operation command at runtime against request message.
					Mutually exclusive with 'command'.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="progress-listener">
			<xsd:annotation>
				<xsd:documentation>
					Reference to an instance of 'com.amazonaws.services.s3.transfer.internal.S3ProgressListener'.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="com.amazonaws.services.s3.transfer.internal.S3ProgressListener"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="upload-metadata-provider">
			<xsd:annotation>
				<xsd:documentation>
					Reference to an instance of
					'org.springframework.integration.aws.outbound.S3MessageHandler$UploadMetadataProvider'.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type
								type="org.springframework.integration.aws.outbound.S3MessageHandler$UploadMetadataProvider"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="key-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate S3Object key at runtime against request message.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="object-acl-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate S3Object ACL at runtime against request message
					for the 'upload' operation.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="destination-bucket-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate destination S3 bucket at runtime against request message
					for the 'copy' operation.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="destination-key-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression to evaluate destination S3Object key at runtime against request message
					for the 'copy' operation.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="resource-id-resolver">
			<xsd:annotation>
				<xsd:documentation>
					The 'org.springframework.cloud.aws.core.env.ResourceIdResolver' bean reference.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="org.springframework.cloud.aws.core.env.ResourceIdResolver"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>

	<xsd:simpleType name="s3CommandType">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="UPLOAD" />
			<xsd:enumeration value="DOWNLOAD" />
			<xsd:enumeration value="COPY" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="s3-inbound-channel-adapter">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Configures a 'SourcePollingChannelAdapter' Endpoint for the
					'org.springframework.integration.aws.inbound.S3InboundFileSynchronizingMessageSource' that
					synchronizes a local directory with the contents of a remote Amazon S3 bucket.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence minOccurs="0" maxOccurs="1">
				<xsd:element ref="integration:poller"/>
			</xsd:sequence>
			<xsd:attribute name="session-factory" use="required">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type
									type="org.springframework.integration.file.remote.session.SessionFactory" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation><![CDATA[
					Reference to an [org.springframework.integration.file.remote.session.SessionFactory] bean with
					an [com.amazonaws.services.s3.model.S3ObjectSummary] generic type parameter.
				]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="local-directory" use="required">
				<xsd:annotation>
					<xsd:documentation>
						Identifies the directory path (e.g.,
						"/local/mytransfers") where files
						will be transferred TO.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="remote-directory">
				<xsd:annotation>
					<xsd:documentation>
						Identifies the remote directory path (e.g., "/remote/mytransfers")
						Mutually exclusive with 'remote-directory-expression'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="remote-directory-expression">
				<xsd:annotation>
					<xsd:documentation>
						Specify a SpEL expression which
						will be used to evaluate the directory
						path from where the files will be transferred
						(e.g., "@someBean.fetchDirectory");
						Mutually exclusive with 'remote-directory'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="temporary-file-suffix">
				<xsd:annotation>
					<xsd:documentation>
						Extension used when downloading files.
						We change it right after we know it's downloaded.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="filename-pattern">
				<xsd:annotation>
					<xsd:documentation>
						Allows you to provide a file name pattern to
						determine the file names
						that need to be scanned.
						This is based on
						simple pattern matching (e.g., "*.txt, fo*.txt" etc.)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="local-filename-generator-expression">
				<xsd:annotation>
					<xsd:documentation>
						Allows you to provide a SpEL expression to
						generate the file name of
						the local (transferred) file. The root
						object of the SpEL
						evaluation is the name of the original
						file.
						For example, a valid expression would be "#this.toUpperCase() +
						'.a'" where #this represents the
						original name of the remote
						file.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="filename-regex" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Allows you to provide a Regular Expression to
						determine the file names
						that need to be scanned.
						(e.g., "f[o]+\.txt" etc.)
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="comparator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Specify a Comparator to be used when ordering Files. If none is provided, the
						order will be determined by the java.io.File implementation of Comparable.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="java.util.Comparator" />
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="filter" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.file.filters.FileListFilter" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Allows you to specify a reference to a
						[org.springframework.integration.file.filters.FileListFilter]
						bean. This filter is applied to files on the remote server and
						only files that pass the filter are retrieved.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="local-filter" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.integration.file.filters.FileListFilter" />
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						Allows you to specify a reference to a
						[org.springframework.integration.file.filters.FileListFilter]
						bean. This filter is applied to files after they have been
						retrieved. The default is an AcceptOnceFileListFilter which means that,
						even if a new instance of a file is retrieved from the remote server,
						a message won't be generated. The filter provided here is combined
						with a filter that prevents the message source from processing
						files that are currently being downloaded.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="auto-create-local-directory">
				<xsd:annotation>
					<xsd:documentation>
						Tells this adapter if the local directory must
						be auto-created if it
						doesn't exist. Default is TRUE.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="delete-remote-files" type="xsd:string" default="false">
				<xsd:annotation>
					<xsd:documentation>
						Specify whether to delete the remote source
						file after copying.
						By default, the remote files will NOT be
						deleted.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="preserve-timestamp" type="xsd:string" default="false">
				<xsd:annotation>
					<xsd:documentation>
						Specify whether to preserve the modified timestamp from the remote source
						file on the local file after copying.
						By default, the remote timestamp will NOT be
						preserved.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="sqs-outbound-channel-adapter">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an outbound SQS Channel Adapter for sending messages to queues.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="baseSqsAdapterType">
					<xsd:choice minOccurs="0" maxOccurs="2">
						<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
						<xsd:element name="request-handler-advice-chain" type="integration:handlerAdviceChainType"
									 minOccurs="0" maxOccurs="1"/>
					</xsd:choice>
					<xsd:attribute name="queue">
						<xsd:annotation>
							<xsd:documentation>
								The Amazon queue name or URL.
								Mutually exclusive with 'queue-expression'.
								This attribute isn't mandatory and the queue can be specified in message headers
								with the 'AwsHeaders.QUEUE' header name.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="queue-expression">
						<xsd:annotation>
							<xsd:documentation>
								A SpEL expression that resolves to an Amazon queue or its URL.
								The 'requestMessage' is the root object for evaluation context.
								Mutually exclusive with 'queue'.
								This attribute isn't mandatory and the queue can be specified in message headers with
								the 'AwsHeaders.QUEUE' header name.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="queue-messaging-template">
						<xsd:annotation>
							<xsd:documentation>
								A bean reference to the QueueMessagingTemplate that this class is supposed to use.
								This attribute is mutually exclusive with the 'sqs' and 'resource-id-resolver'
								attributes.
							</xsd:documentation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type
											type="org.springframework.cloud.aws.messaging.core.QueueMessagingTemplate"/>
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="sqs-message-driven-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				Configures an endpoint ('SqsMessageDrivenChannelAdapter') that will receive
				Amazon SQS message from the provided 'queues'.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="baseSqsAdapterType">
					<xsd:attribute name="error-channel" use="optional" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Message Channel to which error Messages should be sent.
							</xsd:documentation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="send-timeout" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								Maximum amount of time in milliseconds to wait when sending a message
								to the channel if such channel may block.
								For example, a Queue Channel can block until space is available
								if its maximum capacity has been reached.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="queues" use="required">
						<xsd:annotation>
							<xsd:documentation>
								Comma-separated SQS queue names or their URLs.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="task-executor" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								The 'org.springframework.core.task.AsyncTaskExecutor' to run the underlying listener
								task
								from the
								'org.springframework.cloud.aws.messaging.listener.SimpleMessageListenerContainer'.
							</xsd:documentation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.core.task.AsyncTaskExecutor"/>
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="max-number-of-messages">
						<xsd:annotation>
							<xsd:documentation>
								Configure the maximum number of messages that should be retrieved during one
								poll to the Amazon SQS system. This number must be a positive, non-zero number that
								has a maximum number of 10. Values higher then 10 are currently
								not supported by the queueing system. Defaults to 1.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="visibility-timeout">
						<xsd:annotation>
							<xsd:documentation>
								Configures the duration (in seconds) that the received messages are hidden from
								subsequent poll requests after being retrieved from the system.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="queue-stop-timeout">
						<xsd:annotation>
							<xsd:documentation>
								Configure the maximum number of milliseconds the method waits for a queue
								to stop before interrupting the current thread. Defaults to 10000.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="wait-time-out">
						<xsd:annotation>
							<xsd:documentation>
								<![CDATA[
								Configures the wait timeout that the poll request will wait for new message
								to arrive if the are currently no messages on the queue.
								Higher values will reduce poll request to the system significantly. The value should
								be between 1 and 20. For more information read the
								http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-long-polling.html
								]]>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="destination-resolver">
						<xsd:annotation>
							<xsd:documentation>
								A reference to a bean that implements the
								'org.springframework.messaging.core.DestinationResolver' interface.
								E.g.
								'org.springframework.cloud.aws.messaging.support.destination.DynamicQueueUrlDestinationResolver'
							</xsd:documentation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.core.DestinationResolver"/>
								</tool:annotation>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="message-deletion-policy" default="NO_REDRIVE">
						<xsd:annotation>
							<xsd:documentation>
								Defines the policy that must be used for the deletion of SQS messages once
								they were processed. The default policy is NO_REDRIVE because it is the safest
								way to avoid poison messages and have
								a safe way to avoid the loss of messages (i.e. using a dead letter queue).
							</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:union memberTypes="messageDeletionPolicy xsd:string"/>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:simpleType name="messageDeletionPolicy">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="NO_REDRIVE"/>
			<xsd:enumeration value="ALWAYS"/>
			<xsd:enumeration value="NEVER"/>
			<xsd:enumeration value="ON_SUCCESS"/>
		</xsd:restriction>
	</xsd:simpleType>


	<xsd:element name="sns-inbound-channel-adapter">
		<xsd:annotation>
			<xsd:documentation>
				Defines an SNS inbound HTTP-based Channel Adapter - SnsInboundChannelAdapter.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
			<xsd:attribute name="sns" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The 'com.amazonaws.services.sns.AmazonSNS' bean reference.
					</xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="com.amazonaws.services.sns.AmazonSNS"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="path" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						Comma-separated URI paths (e.g., /orderId/{order}).
						Ant-style path patterns are also supported (e.g. /myPath/*.do).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="send-timeout" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Maximum amount of time in milliseconds to wait when sending
						a message to the channel if such channel may block.
						For example, a Queue Channel can block until space
						is available if its maximum capacity has been reached.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="payload-expression" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						Allows you to specify SpEL expression to construct a Message payload.
						The root evaluation object is a raw Message as a result of the 'HttpServletRequest'
						conversion in the 'HttpRequestHandlingEndpointSupport' super class.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="error-channel" type="xsd:string">
				<xsd:annotation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
						</tool:annotation>
					</xsd:appinfo>
					<xsd:documentation>
						The MessagingGateway's 'error-channel' where to send an ErrorMessage in case
						of Exception is caused from original message flow.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="handle-notification-status" default="false">
				<xsd:annotation>
					<xsd:documentation>
						Flag to indicate if the 'SubscriptionConfirmation' and 'UnsubscribeConfirmation'
						SNS messages should sent to the 'channel' or not. If 'true' the
						'AwsHeaders.NOTIFICATION_STATUS' message header is populated with the 'NotificationStatus'
						value. In this case it is an application responsibility to 'confirm' subscription or not using
						that 'NotificationStatus' object. Defaults to 'false'.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="sns-outbound-channel-adapter">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an outbound SNS Channel Adapter for publishing messages to the topic.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="baseSnsAdapterType">
					<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="sns-outbound-gateway">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation>
					Defines an outbound SNS Channel Adapter for publishing messages to the topic.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="baseSnsAdapterType">
					<xsd:attribute name="request-channel" use="required" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Identifies the request channel attached to this gateway.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="reply-channel" type="xsd:string">
						<xsd:annotation>
							<xsd:appinfo>
								<tool:annotation kind="ref">
									<tool:expected-type type="org.springframework.messaging.MessageChannel"/>
								</tool:annotation>
							</xsd:appinfo>
							<xsd:documentation>
								Identifies the reply channel attached to this
								gateway.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="reply-timeout" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
								Allows you to specify how long this gateway will wait for
								the reply message to be sent successfully to the reply channel
								before throwing an exception. This attribute only applies when the
								channel might block, for example when using a bounded queue channel that
								is currently full.

								Also, keep in mind that when sending to a DirectChannel, the
								invocation will occur in the sender's thread. Therefore,
								the failing of the send operation may be caused by other
								components further downstream.

								The "reply-timeout" attribute maps to the "sendTimeout" property of the
								underlying 'MessagingTemplate' instance (org.springframework.integration.core.MessagingTemplate).

								The attribute will default, if not specified, to '-1', meaning that
								by default, the Gateway will wait indefinitely. The value is
								specified in milliseconds.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="id" type="xsd:string"/>
					<xsd:attributeGroup ref="integration:smartLifeCycleAttributeGroup"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>


	<xsd:complexType name="baseSqsAdapterType">
		<xsd:annotation>
			<xsd:documentation>
				Base type for the 'sqs-message-driven-channel-adapter' and 'sqs-outbound-channel-adapter' elements.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="sqs">
			<xsd:annotation>
				<xsd:documentation>
					The 'com.amazonaws.services.sqs.AmazonSQS' bean reference.
					Must be 'AmazonSQSAsync' for the 'sqs-message-driven-channel-adapter'.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="com.amazonaws.services.sqs.AmazonSQS"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="resource-id-resolver">
			<xsd:annotation>
				<xsd:documentation>
					The 'org.springframework.cloud.aws.core.env.ResourceIdResolver' bean reference.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="org.springframework.cloud.aws.core.env.ResourceIdResolver"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attributeGroup ref="integration:channelAdapterAttributes"/>
	</xsd:complexType>


	<xsd:complexType name="baseSnsAdapterType">
		<xsd:choice minOccurs="0" maxOccurs="2">
			<xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
			<xsd:element name="request-handler-advice-chain" type="integration:handlerAdviceChainType"
						 minOccurs="0"/>
		</xsd:choice>
		<xsd:attribute name="sns" use="required">
			<xsd:annotation>
				<xsd:documentation>
					The 'com.amazonaws.services.sns.AmazonSNS' bean reference.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="com.amazonaws.services.sns.AmazonSNS"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="topic-arn">
			<xsd:annotation>
				<xsd:documentation>
					The Amazon SNS Topic ARN.
					Mutually exclusive with 'topic-arn-expression'.
					This attribute isn't mandatory and the topic can be specified on the 'PublishRequest'
					payload of the request Message.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="topic-arn-expression">
			<xsd:annotation>
				<xsd:documentation>
					A SpEL expression that resolves to an Amazon SNS Topic ARN.
					The 'requestMessage' is the root object for evaluation context.
					Mutually exclusive with 'topic-arn'.
					This attribute isn't mandatory and the the topic can be specified on the
					'com.amazonaws.services.sns.model.PublishRequest'
					payload of the request Message.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="subject">
			<xsd:annotation>
				<xsd:documentation>
					The Notification Subject.
					Mutually exclusive with 'subject-expression'.
					This attribute isn't mandatory and the subject can be fully omitted.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="subject-expression">
			<xsd:annotation>
				<xsd:documentation>
					The SpEL expression for Notification Subject.
					The 'requestMessage' is the root object for evaluation context.
					Mutually exclusive with 'subject-expression'.
					This attribute isn't mandatory and the subject can be fully omitted.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="body-expression">
			<xsd:annotation>
				<xsd:documentation>
					The SpEL expression evaluating the 'message' object for
					the 'com.amazonaws.services.sns.model.PublishRequest'.
					The 'requestMessage' is the root object for evaluation context.
					The 'org.springframework.integration.aws.support' package is registered with the
					`EvaluationContext` to simplify usage of the `SnsBodyBuilder` from expression definition.
					This attribute isn't mandatory and the 'payload' of request Message can be used directly.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="resource-id-resolver">
			<xsd:annotation>
				<xsd:documentation>
					The 'org.springframework.cloud.aws.core.env.ResourceIdResolver' bean reference.
				</xsd:documentation>
				<xsd:appinfo>
					<tool:annotation kind="ref">
						<tool:expected-type type="org.springframework.cloud.aws.core.env.ResourceIdResolver"/>
					</tool:annotation>
				</xsd:appinfo>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="order">
			<xsd:annotation>
				<xsd:documentation>
					Specifies the order for invocation when this endpoint is connected as a
					subscriber to a SubscribableChannel.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>


</xsd:schema>
